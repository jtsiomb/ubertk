ccsrc = $(wildcard src/*.cc)
csrc = $(wildcard src/*.c)
ccobj = $(ccsrc:.cc=.o)
cobj = $(csrc:.c=.o)
obj = $(cobj) $(ccobj)
dep = $(obj:.o=.d)

abi = 0
rev = 1

name = libutk
lib_a = $(name).a
dist_file = ubertk.tar.gz
diag_file = diag.ps

sys := $(shell uname -s | sed 's/MINGW.*/mingw/')
ifeq ($(sys), Darwin)
	gllibs = -framework OpenGL -framework GLUT
	testbin = test
	lib_so = $(name).dylib
	sharedopt = -dynamiclib
	sodir = lib

else ifeq ($(sys), mingw)
	gllibs = -lopengl32 -lglu32 -lglut32
	testbin = test.exe
	lib_so = $(name).dll
	sharedopt = -shared
	sodir = bin

else
	pic = -fPIC
	gllibs = -lGL -lGLU -lglut
	testbin = test
	soname = $(name).so.$(abi)
	lib_so = $(soname).$(rev)
	ldname = $(name).so
	sharedopt = -shared -Wl,-soname,$(soname)
	sodir = lib
endif

AR = ar
CFLAGS = -std=c89 -pedantic -Wall $(opt) $(dbg) -Isrc $(pic)
CXXFLAGS = -std=c++98 -pedantic -Wall $(opt) $(dbg) -Isrc $(pic) `pkg-config --cflags freetype2`
LDFLAGS = $(gllibs) `pkg-config --libs freetype2`

.PHONY: all
all: $(lib_so) $(lib_a) $(soname) $(ldname)

$(lib_a): $(obj)
	$(AR) rcs $@ $(obj)

$(lib_so): $(obj)
	$(CXX) $(sharedopt) -o $@ $(obj)
	[ -n "$(ldname)" ] && \
		rm -f $(soname) && ln -s $(lib_so) $(soname) && \
		rm -f $(ldname) && ln -s $(soname) $(ldname) || \
		true

$(testbin): test.o test_text.o $(lib_a)
	$(CXX) -o $@ test.o test_text.o $(lib_a) $(LDFLAGS)

-include $(dep)

%.d: %.cc
	@$(CPP) $(CXXFLAGS) -MM -MT $(@:.d=.o) $< >$@

%.d: %.c
	@$(CPP) $(CFLAGS) -MM -MT $(@:.d=.o) $< >$@


.PHONY: $(diag_file)
$(diag_file):
	echo 'digraph class_diagram {' >/tmp/cdiag.dot
	echo '    rankdir=BT;' >>/tmp/cdiag.dot
	for i in src/*.h; do grep class $$i | grep ':' | sed 's/class /    /' | sed 's/: public/->/' | sed 's/ {/;/' >>/tmp/cdiag.dot; done
	echo '}' >>/tmp/cdiag.dot
	dot -Tps /tmp/cdiag.dot >$(diag_file)


.PHONY: clean
clean:
	rm -f $(obj) $(lib_a) $(dist_file) $(diag_file) test.o test_text.o $(testbin)

.PHONY: cleandep
cleandep:
	rm -f $(dep)

.PHONY: dist
dist: clean
	cd ..; tar czvf $(dist_file) ubertk; mv $(dist_file) ubertk/

.PHONY: install
install:
	mkdir -p $(DESTDIR)$(PREFIX)/include/utk $(DESTDIR)$(PREFIX)/lib
	cp $(lib_a) $(DESTDIR)$(PREFIX)/lib/$(lib_a)
	cp $(lib_so) $(DESTDIR)$(PREFIX)/$(sodir)/$(lib_so)
	cp src/*.h src/*.inl $(DESTDIR)$(PREFIX)/include/utk
	[ -n "$(ldname)" ] && \
		rm -f $(DESTDIR)$(PREFIX)/$(sodir)/$(ldname) $(DESTDIR)$(PREFIX)/$(sodir)/$(soname) && \
		cd $(DESTDIR)$(PREFIX)/lib && ln -s $(lib_so) $(ldname) && ln -s $(lib_so) $(soname) || true


.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/lib/$(lib_a)
	rm -f $(DESTDIR)$(PREFIX)/$(sodir)/$(lib_so)
	rm -f $(DESTDIR)$(PREFIX)/include/utk/*
	rmdir $(DESTDIR)$(PREFIX)/include/utk
	[ -n "$(ldname)" ] && \
		rm -f $(DESTDIR)$(PREFIX)/$(sodir)/$(ldname) && \
		rm -f $(DESTDIR)$(PREFIX)/$(sodir)/$(soname) || true
